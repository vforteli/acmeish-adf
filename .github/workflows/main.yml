name: adf

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Restore dependencies
        working-directory: build
        run: npm ci

      - name: Build ADF stuff
        run: ./build.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: adf_publish
          path: |
            build/ExportedArmTemplate

  deploy:
    concurrency:
      group: deploy-adf-group
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: "az login"
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: actions/download-artifact@v4

      - name: Deploy to... somewhere
        shell: pwsh
        run: |
          $rg = "acme-adftest-rg"
          $tenantId = "ed5190ab-ab51-4f01-8a86-4825c1d7f284"
          $adfname = "acmeish-prod-adf"

          Install-Module -Name Az.DataFactory -Force -AllowClobber

          $accessToken = az account get-access-token --query accessToken --output tsv
          Connect-AzAccount -AccessToken $accessToken -TenantId ${{ secrets.AZURE_TENANT_ID }} -SubscriptionId ${{ secrets.AZURE_SUBSCRIPTION_ID }} -AccountId ${{ secrets.AZURE_CLIENT_ID }}


          ./adf_publish/PrePostDeploymentScript.ps1 `
            -ArmTemplate ./adf_publish/ARMTemplateForFactory.json `
            -ArmTemplateParameters ./deploy/parameters/parameters-prod.json `
            -ResourceGroupName $rg `
            -ExplicitStopTriggerList "eventtrigger" `
            -DataFactoryName $adfname -predeployment $true -deleteDeployment $false


          az stack group create `
            --name $adfname `
            --resource-group $rg `
            --template-file './adf_publish/ARMTemplateForFactory.json' `
            --parameters './deploy/parameters/parameters-prod.json' `
            --deny-settings-mode 'none' `
            --action-on-unmanage 'deleteResources' `
            --yes


          ./adf_publish/PrePostDeploymentScript.ps1 `
            -ArmTemplate ./adf_publish/ARMTemplateForFactory.json `
            -ArmTemplateParameters ./deploy/parameters/parameters-prod.json `
            -ResourceGroupName $rg `
            -DataFactoryName $adfname -predeployment $false -deleteDeployment $false
